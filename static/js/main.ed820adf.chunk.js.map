{"version":3,"sources":["components/Navbar.js","components/Forms.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","onClick","toggleMode","aria-checked","role","htmlFor","placeholder","Forms","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlertProp","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","split","join","length","Alert","word","alert","charAt","slice","defaultProps","App","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ed820adf.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">{props.about}</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">Link</a>\r\n          </li>\r\n        </ul>\r\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} aria-checked=\"false\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n        </div>\r\n\r\n        <form className=\"d-flex mx-2\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    about : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Set title here\",\r\n    about : \"About here\"\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function Forms(props) {\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlertProp(\"Converted to uppercase\", \"success\");\r\n  }\r\n\r\n  const handleClear = () => {\r\n    setText('');\r\n    props.showAlertProp(\"Cleared the text\", \"success\");\r\n  }\r\n  const handleSpeak = () => {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text\r\n    window.speechSynthesis.speak(msg)\r\n  }\r\n\r\n  const handleSpace = () => {\r\n    let newText = text.split(/[ ]+/)\r\n    setText(newText.join(\" \"))\r\n  }\r\n  const [text, setText] = useState(\" \");\r\n  return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='light'?'black':'white'}}>\r\n     \r\n        <h2>{props.heading}</h2>\r\n        <div className='mb-3'>\r\n        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='light'?'white':'grey', color: props.mode==='light'?'black':'white'}} rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>To Uppercase</button>\r\n        <button className='btn btn-primary mx-2' onClick={handleClear}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleSpeak}>Speak</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleSpace}>Remove Extra Space</button>\r\n\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{text.split(\" \").length * 0.008} Minutes to read</p>\r\n      <h3>Preview</h3>\r\n      <p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n       </div>\r\n  )\r\n}\r\n","import './App.css';\nimport React from 'react';\n// import { BrowserRouter, Route, Routes} from \"react-router-dom\";\n// import { ReactDOM } from 'react';\nimport Navbar from './components/Navbar';\nimport Accordion from './components/Accordion';\nimport { useState } from 'react';\nimport Forms from './components/Forms';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if(mode === \"light\") { \n      setMode(\"dark\")\n      document.body.style.backgroundColor = 'grey'\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }\n    else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <BrowserRouter> */}\n    <Navbar title='Text Utils' about='About' mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    {/* <Routes> */}\n    <Forms heading=\"Analyze text here\" mode={mode} showAlertProp={showAlert}></Forms>\n        {/* <Route path=\"/\" element={<Forms heading=\"Analyze text here\" mode={mode} showAlertProp={showAlert}></Forms>}/> */}\n    {/* </Routes> */}\n    {/* <Routes>\n      <Route path=\"/about\" element={<Accordion/>}/>\n      </Routes> */}\n    {/* </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}